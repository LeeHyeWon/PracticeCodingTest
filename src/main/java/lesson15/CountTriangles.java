package lesson15;

public class CountTriangles {
    /**
     * N개의 정수로 구성된 배열 A가 제공됩니다. 세 변(P, Q, R)은 길이가 A[P], A[Q], A[R]인 삼각형을 만들 수 있는 경우 삼각형입니다. 즉, 삼중항(P, Q, R)은 0 ≤ P < Q < R < N이고 다음과 같은 경우 삼각형입니다.
     *
     * A[P] + A[Q] > A[R],
     * A[Q] + A[R] > A[P],
     * A[R] + A[P] > A[Q].
     * 예를 들어, 다음과 같은 배열 A를 고려하십시오.
     *
     *   A[0] = 10 A[1] = 2 A[2] = 5
     *   A[3] = 1 A[4] = 8 A[5] = 12
     * 이 배열의 요소로 구성할 수 있는 4개의 삼각형 삼중항, 즉 (0, 2, 4), (0, 2, 5), (0, 4, 5) 및 (2, 4, 5)가 있습니다.
     *
     * 함수 작성:
     *
     * 클래스 솔루션 { 공개 int 솔루션(int[] A); }
     *
     * N개의 정수로 구성된 배열 A가 주어지면 이 배열의 삼각형 삼중항 수를 반환합니다.
     *
     * 예를 들어, 주어진 배열 A는 다음과 같습니다.
     *
     *   A[0] = 10 A[1] = 2 A[2] = 5
     *   A[3] = 1 A[4] = 8 A[5] = 12
     * 함수는 위에서 설명한 대로 4를 반환해야 합니다.
     *
     * 다음 가정에 대한 효율적인 알고리즘을 작성하십시오.
     *
     * N은 [0..1,000] 범위 내의 정수입니다.
     * 배열 A의 각 요소는 [1..1,000,000,000] 범위 내의 정수입니다.
     */
}
